
DROP TABLE EMPLOYEE;

CREATE OR REPLACE SEQUENCE SEQTABLE START = 1 INCREMENT = 1; 

CREATE TABLE EMPLOYEE(
    EMPLOYEE_ID INT DEFAULT SEQTABLE.NEXTVAL PRIMARY KEY,
    NAME VARCHAR(60), 
    STATUS BOOLEAN
);

INSERT INTO EMPLOYEE( NAME, STATUS) VALUES
('Carla Moseley', TRUE),
('Lean Obregon', TRUE),
('Marcus Villatoro', TRUE),
('Anuj Venkatesan',TRUE);

SELECT * FROM EMPLOYEE;

DROP TABLE CUSTOMER;

CREATE  TABLE CUSTOMER(
    PHONE_NUMBER VARCHAR(10) PRIMARY KEY,
    ZIP_CODE VARCHAR(6),
    CITY VARCHAR(64),
    STATE VARCHAR(2),
    ST_ADDRESS VARCHAR (64)
);

INSERT INTO CUSTOMER VALUES
(9758750309, 079222, 'Berkerly Heights', 'NJ', '100 Connel Drive'),
(9098750459, 079222, 'Berkerly Heights', 'NJ', '100 Connel Drive'),
(9378750852, 079222, 'Berkerly Heights', 'NJ', '100 Connel Drive'),
(9888750462, 079222, 'Berkerly Heights', 'NJ', '100 Connel Drive'),
(9738231107, 07416, 'Franklin Boro', 'NJ', '3599 Hilltop Haven Drive'),
(9082611049,07071,'Lyndhurst','NJ','4160 Williams Mine Road'),
(9733145094,08854,'Piscataway','NJ','467 Drummond Street'),
(7325736470,08753, 'East Dover','NJ','1329 Webster Street'),
(6162172795, 07108, 'Newark', 'NJ','3368 Cottonwood Lane'),
(7328465483,08753,'East Dover', 'NJ', '1329 Webster Street');


SELECT * FROM CUSTOMER;

DROP TABLE ORDER_DETAIL;

CREATE SEQUENCE SET_TABLE1 START = 1, INCREMENT = 1; 

CREATE TABLE ORDER_DETAIL(
    ORDER_ID INT DEFAULT SET_TABLE1.NEXTVAL PRIMARY KEY,
    CUSTOMER_ID VARCHAR(10),
        FOREIGN KEY(CUSTOMER_ID)
            REFERENCES CUSTOMER(PHONE_NUMBER),
    EMPLOYEE_ID INT,
        FOREIGN KEY(EMPLOYEE_ID) 
        REFERENCES EMPLOYEE(EMPLOYEE_ID),
    PRICE_CHARGED FLOAT
);

INSERT INTO ORDER_DETAIL (CUSTOMER_ID,EMPLOYEE_ID, PRICE_CHARGED) VALUES
(9758750309,2, 45.89),
(9758750309,4, 68.89),
(9888750462,1, 25.58),
(9378750852,3, 74.32),
(9758750309,1, 56.75),
(9758750309,4, 68.89),
(9888750462,2, 56.78),
(9888750462,3, 23.36),
(9378750852,3, 34.56),
(9378750852,1, 67.75),
(9738231107,4, 33.65),
(9738231107,4, 63.23),
(9738231107,2, 45.56),
(9082611049,1,34.24),
(9082611049,3,55.50),
(9082611049,2,45.56),
(9733145094,2,33.90),
(9733145094,2,67.70),
(9733145094,1,89.90),
(7325736470,4,78.88),
(7325736470,4,65.67),
(7325736470,1,66.76),
(6162172795,2,34.45),
(6162172795,2,23.23),
(6162172795,1,67.45),
(7328465483,2,45.87),
(7328465483,2,56.76),
(7328465483,4,90.75);


SELECT * FROM ORDER_DETAIL;

CREATE SEQUENCE TABLE_2 START =1, INCREMENT = 1;

DROP TABLE PRODUCT;

CREATE TABLE Product(
ID INT DEFAULT TABLE_2.NEXTVAL PRIMARY KEY,
Name VARCHAR(50),
Size VARCHAR(50),
Price FLOAT,
Stock INT);
//FOREIGN KEY(ID) REFERENCES Customer_Order(Product_ID)


INSERT INTO PRODUCT (NAME,SIZE,PRICE,STOCK) VALUES 
('Breadsticks', '8',2.50, 8),
('Pizza - Large Pepperoni', '18',14.0,30),
('Pizza - Large House Special', '18', 16.00,15),
('Soda','2 L',3.25,6);

select * from Product;

DROP TABLE CUSTOMER_ORDER;

CREATE SEQUENCE TABLE_3 START =1, INCREMENT =1; 

create or replace table Customer_Order(
    customer_order_id int,
    phone_number VARCHAR(10),
    product_id int, 
    time_and_date TIMESTAMP_LTZ,
    primary key (customer_order_id, product_id)
);
 
insert into customer_order(customer_order_id,phone_number, product_id, time_and_date)
VALUES 
(1,9758750309,2,'2020-01-01 12:00:00'),
(1,9758750309,1,'2020-01-01 12:00:01'),
(1,9758750309,3,'2020-01-01 12:00:02'),
(1,9758750309,3,'2020-01-01 12:30:04'),
(1,9758750309,1,'2020-01-01 12:30:05'),
(1,9758750309,1,'2020-01-01 12:30:06'),
(2,9888750462,2,'2020-01-01 12:45:07'),
(2,9888750462,4,'2020-01-01 12:45:08'),
(2,9378750852,3,'2020-01-01 10:00:09'),
(4,9378750852,1,'2020-01-13 10:00:10'),
(4,9378750852,1,'2020-01-13 10:00:11'),
(5,9758750309,2,'2020-01-13 10:10:13'),
(5,9758750309,4,'2020-01-13 10:10:14'),
(5,9758750309,3,'2020-01-13 10:10:15'),
(6,9758750309,4,'2020-01-13 10:15:11'),
(6,9758750309,4,'2020-01-13 10:15:12'),
(7,9888750462,4,'2020-01-24 10:20:10'),
(7,9888750462,2,'2020-01-24 10:20:11'),
(7,9888750462,2,'2020-01-24 10:20:13'),
(8,9888750462,2,'2020-01-25 10:30:15'),
(8,9888750462,3,'2020-01-25 10:30:16'),
(8,9888750462,2,'2020-01-25 10:30:17'),
(9,9378750852,3,'2020-01-31 10:35:17'),
(9,9378750852,1,'2020-01-31 10:35:18'),
(9,9378750852,3,'2020-01-31 10:35:19'),
(10,9378750852,2,'2020-02-01 11:01:19'),
(10,9378750852,1,'2020-02-01 11:02:19'),
(10,9378750852,3,'2020-02-01 11:02:20'),
(11,9738231107,4,'2020-02-01 11:03:30'),
(11,9738231107,1,'2020-02-01 11:03:32'),
(11,9738231107,2,'2020-02-01 11:03:33'),
(12,9738231107,4,'2020-02-10 11:04:11'),
(12,9738231107,3,'2020-02-10 11:04:12'),
(13,9738231107,2,'2020-02-10 11:04:12'),
(13,9738231107,3,'2020-02-10 11:04:12'),
(13,9738231107,2,'2020-03-01 11:04:12'),
(14,9082611049,1,'2020-03-01 11:05:13'),
(14,9082611049,3,'2020-03-01 11:05:14'),
(14,9082611049,1,'2020-03-01 11:05:15'),
(15,9082611049,3,'2020-03-01 11:07:54'),
(15,9082611049,2,'2020-03-01 11:07:55'),
(15,9082611049,2,'2020-03-01 11:07:56'),
(15,9082611049,4,'2020-03-01 11:07:57'),
(16,9082611049,4,'2020-04-01 11:23:03'),
(16,9082611049,4,'2020-04-01 11:23:04'),
(17,9733145094,2,'2020-04-01 11:25:12'),
(17,9733145094,3,'2020-04-01 11:25:13'),
(17,9733145094,1,'2020-04-01 11:25:14'),
(18,9733145094,3,'2020-04-01 11:45:43'),
(18,9733145094,2,'2020-04-01 11:45:44'),
(18,9733145094,1,'2020-04-01 11:45:45'),
(19,9733145094,1,'2020-04-01 11:50:58'),
(19,9733145094,3,'2020-04-01 11:50:59'),
(19,9733145094,2,'2020-04-01 11:51:00'),
(20,7325736470,4,'2020-05-01 12:10:10'),
(20,7325736470,3,'2020-05-01 12:10:11'),
(21,7325736470,4,'2020-05-01 12:30:50'),
(21,7325736470,2,'2020-05-01 12:30:51'),
(21,7325736470,2,'2020-05-01 12:30:52'),
(22,7325736470,2,'2020-05-01 12:33:52'),
(22,7325736470,4,'2020-05-01 12:33:53'),
(22,7325736470,1,'2020-05-01 12:33:54'),
(23,6162172795,1,'2020-06-01 12:36:02'),
(23,6162172795,3,'2020-06-01 12:36:03'),
(24,6162172795,2,'2020-07-01 12:40:11'),
(24,6162172795,3,'2020-07-01 12:40:12'),
(24,6162172795,2,'2020-07-01 12:40:13'),
(25,6162172795,1,'2020-07-01 12:45:33'),
(25,6162172795,4,'2020-07-01 12:45:34'),
(25,6162172795,2,'2020-07-01 12:45:35'),
(26,732846548,4,'2020-08-01 12:45:41'),
(26,732846548,3,'2020-08-01 12:45:42'),
(26,732846548,2,'2020-08-01 12:45:43'),
(27,732846548,2,'2020-08-01 12:48:55'),
(27,732846548,3,'2020-08-01 12:48:56'),
(27,732846548,3,'2020-08-01 12:48:57'),
(28,732846548,4,'2020-08-01 13:00:05'),
(28,732846548,1,'2020-08-01 13:00:06'),
(28,732846548,1,'2020-08-01 13:00:07');

SELECT * FROM CUSTOMER_ORDER;

//QUERY 1 EMPLOYEEE
INSERT INTO EMPLOYEE VALUES (5,'Ryan Radwanski',0);
UPDATE EMPLOYEE SET STATUS = 1 WHERE NAME = 'Ryan Radwanski';
DELETE FROM EMPLOYEE WHERE NAME = 'Anuj Venkatesan';
SELECT * FROM EMPLOYEE; 

//ORDER TIME AND NAME 
SELECT DISTINCT CUSTOMER_ORDER_ID, PHONE_NUMBER, TIME_AND_DATE FROM CUSTOMER_ORDER;

//price charged by employee with each order
SELECT ORDER_DETAIL.EMPLOYEE_ID, PRICE_CHARGED FROM ORDER_DETAIL
JOIN EMPLOYEE ON ORDER_DETAIL.EMPLOYEE_ID=EMPLOYEE.EMPLOYEE_ID ORDER BY EMPLOYEE_ID;


create or replace table orders_week as
select name,time_and_date from employee inner join order_detail on employee.employee_id = order_detail.employee_id inner join customer_order on order_detail.customer_id = customer_order.phone_number;

select * from orders_week;

SELECT name, COUNT(*) FROM orders_week WHERE TIME_AND_DATE BETWEEN '2020-01-01 12:00:00' AND DATEADD('day', -7, '2020-08-08 12:00:00') GROUP BY NAME;

SELECT DATE_TRUNC('week', TIME_AND_DATE) AS week_start, NAME, COUNT(*) FROM orders_week WHERE TIME_AND_DATE BETWEEN '2020-01-01 12:00:00' AND DATEADD('day', -7, '2020-08-08 12:00:00') GROUP BY week_start, NAME ORDER BY COUNT(*);

SELECT * FROM CUSTOMER_ORDER WHERE CUSTOMER_ORDER.TIME_AND_DATE> '2020-01-01 12:00:00' AND CUSTOMER_ORDER.TIME_AND_DATE < '2020-08-15 12:00:00';

create or replace table zipcode as select zip_code,time_and_date from customer inner join customer_order on customer.phone_number = customer_order.phone_number;

select zip_code,count(*) from zipcode where TIME_AND_DATE> '2020-01-01 12:00:00' AND TIME_AND_DATE < '2020-08-14 12:00:00' group by zip_code;

SELECT DATE_TRUNC('week', TIME_AND_DATE) AS week_start, zip_code, COUNT(*) FROM zipcode WHERE TIME_AND_DATE BETWEEN '2020-01-01 12:00:00' AND DATEADD('day', -7, '2020-08-08 12:00:00') GROUP BY week_start, zip_code ORDER BY COUNT(*);
